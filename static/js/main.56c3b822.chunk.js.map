{"version":3,"sources":["Utilidades/localStorage.js","statemanagement/index.js","components/ListaNotas/styles.js","components/ListaNotas/Note.js","components/ListaNotas/index.js","components/CrearNota/styles.js","components/CrearNota/Snackbar.js","components/CrearNota/index.js","Utilidades/Modal.js","Utilidades/ShowModal.js","components/ComponentesPrincipales/styles.js","components/ComponentesPrincipales/index.js","App.js","serviceWorker.js","index.js"],"names":["LocalStorage","key","localStorage","getItem","value","setItem","removeItem","get","notebook","set","remove","notebok","id","getNotes","JSON","parse","object","List","length","filter","item","NoteNextMonth","getNotebooks","University","Home","Notes","getAllNotes","itemObject","notebookIs","updatedList","title","message","category","stringify","StateContext","createContext","StateProvider","reducer","initialState","children","Provider","useReducer","useStateValue","useContext","notes","modal","edit","show","showModal","state","action","type","useNoteStyles","makeStyles","theme","paper","padding","spacing","color","palette","text","secondary","marginBottom","button","position","top","wordBreak","paddingBottom","useListStyles","root","flexGrow","margin","marginTop","textField","marginLeft","marginRight","formControl","width","moveToSelect","backgroundColor","Note","props","row","React","useState","classes","useStyles","dispatch","Paper","className","Grid","container","Divider","variant","ButtonGroup","aria-label","Button","onClick","NoteBookOfTheNote","getObjectsOfTheNoteBook","removeNote","note","rmNoteBook","NotesList","mainData","setMainData","setState","stateCategory","setStateCategory","checkboxes","setCheckboxes","searchFor","keyword","array","toSearch","toLowerCase","data","undefined","includes","handleCheckbox","index","indexOf","splice","useEffect","Fragment","Typography","align","gutterBottom","noWrap","TextField","label","placeholder","join","fullWidth","onChange","param","target","searched","InputProps","endAdornment","InputAdornment","size","map","setCheckbox","display","flexWrap","dense","menu","snackBarStyle","close","CustomSnackbar","setClose","openSnack","open","setOpen","handleClose","event","reason","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","onClose","ContentProps","IconButton","CreateNote","inputLabel","useRef","labelWidth","setLabelWidth","openSnackbar","setOpenSnackbar","handleChange","name","Date","getTime","current","offsetWidth","All","multiline","e","rows","FormControl","InputLabel","ref","htmlFor","Select","native","inputProps","allNodes","allNodesObject","rowExists","push","setNotes","ModalBase","findId","Dialog","aria-labelledby","DialogTitle","DialogContent","updateId","findItem","ShowModal","source","escapeHtml","MainComponent","xs","ListaNotas","CrearNota","App","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","document","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","status","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.56c3b822.chunk.js","sourcesContent":["const LocalStorage = {};\n\nLocalStorage.get = key => {\n  return localStorage.getItem(key);\n};\nLocalStorage.set = (key, value) => {\n  return localStorage.setItem(key, value);\n};\nLocalStorage.remove = key => {\n  return localStorage.removeItem(key);\n};\n\nLocalStorage.getNotes = () => {\n  return LocalStorage.get(\"notes\");\n};\n\nLocalStorage.getNotebooks = notebook => {\n  return LocalStorage.get(notebook);\n};\n\n\nLocalStorage.setNotes = value => {\n  LocalStorage.set(\"notes\", value);\n};\n\nLocalStorage.rmNotes = () => {\n  LocalStorage.remove(\"notes\");\n};\n\n/**\n * remove Notes\n **/\nLocalStorage.rmNoteBook = notebok => {\n  LocalStorage.remove(notebok);\n};\n\nLocalStorage.note = id => {\n  if (LocalStorage.getNotes() !== null) {\n    const List = JSON.parse(LocalStorage.getNotes());\n    return List[id];\n  }\n  return [];\n};\nLocalStorage.rowExists = object => {\n  const List = JSON.parse(LocalStorage.getNotes());\n  if (List !== null && List.length > 0) {\n    return List.filter(item => {\n      return object.id === item.id;\n    });\n  } else {\n    return [];\n  }\n};\n\nLocalStorage.rowExistsIn = (notebook, object) => {\n  const List = JSON.parse(localStorage.getItem(notebook));\n  if (List !== null && List.length > 0) {\n    return List.filter(item => {\n      return object.id === item.id;\n    });\n  } else {\n    return [];\n  }\n};\nLocalStorage.getAllNotes = () => {\n  let NoteNextMonth = LocalStorage.getNotebooks(\"Next Month\");\n  let University = LocalStorage.getNotebooks(\"University\");\n  let Home = LocalStorage.getNotebooks(\"Home\");\n  let Notes = LocalStorage.getNotebooks(\"notes\");\n  let All;\n  NoteNextMonth = NoteNextMonth !== null ? JSON.parse(NoteNextMonth) : [];\n  University = University !== null ? JSON.parse(University) : [];\n  Home = Home !== null ? JSON.parse(Home) : [];\n  Notes = Notes !== null ? JSON.parse(Notes) : [];\n  All = [...NoteNextMonth, ...University, ...Home, ...Notes];\n\n  return All;\n};\n\nLocalStorage.findId = id => {\n  const List = LocalStorage.getAllNotes();\n  if (List !== null && List.length > 0) {\n    return List.filter(item => {\n      return id === item.id;\n    });\n  } else {\n    return [];\n  }\n};\n\nLocalStorage.updateId = (id, itemObject) => {\n  const List = JSON.parse(\n    LocalStorage.getNotebooks(\n      itemObject.notebook === \"\" ? \"notes\" : itemObject.notebook\n    )\n  );\n\n  let notebookIs = itemObject.notebook;\n  if (List !== null && List.length > 0) {\n    const updatedList = List.filter(item => {\n      if (id === item.id) {\n        const { title, message, category } = itemObject;\n        item.title = title;\n        item.message = message;\n        item.category = category;\n      }\n      return item;\n    });\n    LocalStorage.set(\n      notebookIs === \"\" ? \"notes\" : notebookIs,\n      JSON.stringify(updatedList)\n    );\n    return true;\n  } else {\n    return false;\n  }\n};\n\nexport default LocalStorage;\n","import React, { createContext, useContext, useReducer } from \"react\";\n\nexport const StateContext = createContext();\n\nexport const StateProvider = ({ reducer, initialState, children }) => (\n  <StateContext.Provider value={useReducer(reducer, initialState)}>\n    {children}\n  </StateContext.Provider>\n);\n\nexport const useStateValue = () => useContext(StateContext);\n\nexport const initialState = {\n  notes: [],\n  modal: false,\n  edit: null,\n  show: null,\n  showModal: false\n};\n\nexport const reducer = (state, action) => {\n  switch (action.type) {\n    case \"newNote\":\n      return {\n        ...state,\n        notes: action.notes\n      };\n    case \"openModal\":\n      return {\n        ...state,\n        modal: action.modal,\n        edit: action.edit\n      };\n    case \"showMessage\":\n      return {\n        ...state,\n        showModal: action.showModal,\n        show: action.show\n      };\n\n    default:\n      return state;\n  }\n};\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nexport const useNoteStyles = makeStyles(theme => ({\n  paper: {\n    padding: theme.spacing(2) * 2,\n    color: theme.palette.text.secondary,\n    marginBottom: 10\n  },\n  button: {\n    position: \"relative\",\n    top: \"10px\"\n  },\n  title: {\n    wordBreak: \"break-all\",\n    paddingBottom: 10\n  }\n}));\n\nexport const useListStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  paper: {\n    padding: theme.spacing(2) * 2,\n    color: theme.palette.text.secondary,\n    marginBottom: 10\n  },\n  margin: {\n    marginTop: 8\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1)\n  },\n  formControl: {\n    marginTop: theme.spacing(1) + \"px !important\",\n    marginBottom: theme.spacing(1) + \"px !important\",\n    width: \"100% !important\"\n  },\n  moveToSelect: {\n    backgroundColor: \"#ccc !important\",\n    color: \"#333 !important\"\n  }\n}));\n","import React from \"react\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Button from \"@material-ui/core/Button\";\nimport LocalStorage from \"../../Utilidades/localStorage\";\nimport { useStateValue } from \"../../statemanagement\";\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { useNoteStyles as useStyles } from \"./styles\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\n\nfunction Note(props) {\n  const { item, row } = props;\n  const { id, title, category } = item;\n  const [checkbox, setCheckbox] = React.useState(false);\n  const classes = useStyles();\n  const [, dispatch] = useStateValue();\n\n  function handleChangeCheckBox() {\n    setCheckbox(!checkbox);\n    props.setCheckbox(!checkbox, id);\n  }\n\n  function deleteNote() {\n    const NoteBookOfTheNote = item.notebook;\n    let getObjectsOfTheNoteBook = JSON.parse(\n      LocalStorage.getNotebooks(NoteBookOfTheNote)\n    );\n    if (getObjectsOfTheNoteBook === null) {\n      getObjectsOfTheNoteBook = JSON.parse(LocalStorage.getNotes());\n    }\n\n    let removeNote = getObjectsOfTheNoteBook.filter(\n      note => note.id !== item.id\n    );\n    LocalStorage.rmNoteBook(\n      NoteBookOfTheNote === \"\" ? \"notes\" : NoteBookOfTheNote\n    );\n    LocalStorage.set(\n      NoteBookOfTheNote === \"\" ? \"notes\" : NoteBookOfTheNote,\n      JSON.stringify(removeNote)\n    );\n\n    dispatch({ type: \"newNote\", notes: removeNote });\n  }\n  return (\n    <Paper className={classes.paper}>\n      <Grid container>\n        <div className={title}>\n           {title}({category})\n        </div>\n      </Grid>\n      <Divider variant=\"middle\" />\n      <Grid container>\n        <ButtonGroup\n          color=\"primary\"\n          aria-label=\"outlined primary button group\"\n          className={classes.button}\n        >\n          <Button variant=\"outlined\" color=\"secondary\" onClick={deleteNote}>\n            Eliminar\n          </Button>\n        </ButtonGroup>\n      </Grid>\n    </Paper>\n  );\n}\n\nexport default Note;\n","import React, { useState } from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Note from \"./Note\";\nimport { useStateValue } from \"../../statemanagement\";\nimport LocalStorage from \"../../Utilidades/localStorage\";\nimport TextField from \"@material-ui/core/TextField\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport Button from \"@material-ui/core/Button\";\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\nimport { useListStyles as useStyles } from \"./styles\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\n\nfunction NotesList() {\n  const classes = useStyles();\n  const [{ notes }, dispatch] = useStateValue();\n  const [mainData, setMainData] = useState([]);\n  const [state, setState] = useState(\"\");\n  const [notebookDropDown, setNotebookDropDown] = useState(\"\");\n  const [stateCategory, setStateCategory] = useState(\"\");\n  const [checkboxes, setCheckboxes] = useState([]);\n\n  /**\n   * Find the object with complexicity O(n2)\n   **/\n  function searchFor(keyword, key, array) {\n    const toSearch = keyword.toLowerCase();\n    return array.filter(data => {\n      return data[key]!==undefined && data[key].toLowerCase().includes(toSearch)\n    });\n  }\n\n  /**\n   * Handle Search in titles\n   **/\n  function search(event) {\n    const value = event.target.value;\n    setState(value);\n    setStateCategory(\"\");\n    const searched = searchFor(value, \"title\", notes);\n    if (searched.length > 0) {\n      setMainData(searched);\n    }\n    if (value.length === 0) {\n      setMainData(notes);\n    }\n  }\n\n  /**\n   * Handle Search in categories\n   **/\n  function searchCategory(param) {\n    const target = param.target;\n    const value = target !== undefined ? target.value : param;\n    setState(\"\");\n    setStateCategory(value);\n    const searched = searchFor(value, \"category\", notes);\n    if (searched.length > 0) {\n      setMainData(searched);\n    }\n    if (searched.length === 0) {\n      setMainData([]);\n    }\n  }\n\n  /**\n   * handle check boxes to move into note books\n   **/\n  function handleCheckbox(state, id) {\n    if (state) {\n      setCheckboxes([...checkboxes, id]);\n    } else {\n      const index = checkboxes.indexOf(id);\n      checkboxes.splice(index, 1);\n      if (checkboxes.length === 0) {\n        setCheckboxes([]);\n      } else {\n        setCheckboxes(checkboxes);\n      }\n    }\n  }\n\n  /**\n   * Handle Move notes to another notebook\n   **/\n  function handleMoveNotes(e) {\n    const NoteBookName = e.target.value;\n\n    //step 1- remove Notes from current NoteBook\n    checkboxes.map(item => {\n      //push items before remove and create a clone\n      const Note = LocalStorage.findId(item)[0];\n      const NoteBookOfTheNote = Note.notebook;\n      const getObjectsOfTheNoteBook = JSON.parse(\n        LocalStorage.getNotebooks(\n          NoteBookOfTheNote === \"\" ? \"notes\" : NoteBookOfTheNote\n        )\n      );\n\n      let removeNote = getObjectsOfTheNoteBook.filter(\n        note => note.id !== Note.id\n      );\n      LocalStorage.rmNoteBook(\n        NoteBookOfTheNote === \"\" ? \"notes\" : NoteBookOfTheNote\n      );\n      LocalStorage.set(\n        NoteBookOfTheNote === \"\" ? \"notes\" : NoteBookOfTheNote,\n        JSON.stringify(removeNote)\n      );\n\n      //step 2- move to new NoteBook\n      let allNodesObject = [];\n      const allNodes = LocalStorage.getNotebooks(NoteBookName);\n      allNodesObject = allNodes !== null ? JSON.parse(allNodes) : [];\n      Note.notebook = NoteBookName;\n      //if Notebook is empty , we have to initial firs object\n      if (allNodesObject.length === 0) {\n        allNodesObject = [Note];\n      } else {\n        //so push into it\n        allNodesObject.push(Note);\n      }\n\n      LocalStorage.set(NoteBookName, JSON.stringify(allNodesObject));\n\n      //step 3- res dispatch current NoteBook witn nre Note list and disable Move\n      setCheckboxes([]);\n      setNotebookDropDown(\"\");\n      dispatch({\n        type: \"newNote\",\n        notes: allNodesObject\n      });\n\n      //  Notes.push(Note);\n      return true;\n    });\n  }\n\n  React.useEffect(() => {\n    setMainData(notes);\n  }, [notes]);\n\n  return (\n    <React.Fragment>\n      <Typography\n        variant=\"h5\"\n        align=\"center\"\n        color=\"secondary\"\n        gutterBottom\n        noWrap\n      >\n        Mis Notas\n      </Typography>\n      <TextField\n        value={stateCategory}\n        id=\"outlined-textarea\"\n        label=\"Buscar Por Etiqueta\"\n        placeholder=\"Buscar Por Etiqueta\"\n        className={[classes.textField, classes.margin].join(\" \")}\n        margin=\"normal\"\n        variant=\"outlined\"\n        fullWidth\n        onChange={searchCategory}\n        InputProps={{\n          endAdornment: (\n            <InputAdornment position=\"end\">\n              <SearchIcon />\n            </InputAdornment>\n          )\n        }}\n      />\n\n\n      <ButtonGroup\n        fullWidth\n        variant=\"text\"\n        color=\"secondary\"\n        size=\"large\"\n        aria-label=\"large contained secondary button group\"\n      >\n      </ButtonGroup>\n      <div className={classes.margin}>\n        {mainData.length > 0 &&\n          mainData.map((item, index) => (\n            <Note\n              setCheckbox={handleCheckbox}\n              row={index}\n              item={item}\n              key={item.id}\n            />\n          ))}\n      </div>\n    </React.Fragment>\n  );\n}\n\nexport default NotesList;\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nexport const useStyles = makeStyles(theme => ({\n  container: {\n    display: \"flex\",\n    flexWrap: \"wrap\"\n  },\n  button: {\n    margin: theme.spacing(1)\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1)\n  },\n  dense: {\n    marginTop: theme.spacing(2)\n  },\n  menu: {\n    width: 200\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    width: \"100%\"\n  }\n}));\n\nexport const snackBarStyle = makeStyles(theme => ({\n  close: {\n    padding: theme.spacing(0.5)\n  }\n}));\n","import React from \"react\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport { snackBarStyle as useStyles } from \"./styles\";\n\nexport default function CustomSnackbar(props) {\n  const classes = useStyles();\n  const { setClose, open: openSnack } = props;\n  const [open, setOpen] = React.useState();\n  /**\n   * set open/false state to show/hide Snackbar\n   **/\n  React.useEffect(() => {\n    setOpen(openSnack);\n  }, [openSnack]);\n  const handleClose = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n\n    setOpen(false);\n    setClose();\n  };\n\n  return (\n    <div>\n      <Snackbar\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"center\"\n        }}\n        open={open}\n        autoHideDuration={6000}\n        onClose={handleClose}\n        ContentProps={{\n          \"aria-describedby\": \"message-id\"\n        }}\n        message={<span id=\"message-id\">La nota ya existe</span>}\n        action={[\n          <IconButton\n            key=\"close\"\n            aria-label=\"close\"\n            color=\"inherit\"\n            className={classes.close}\n            onClick={handleClose}\n          >\n            <CloseIcon />\n          </IconButton>\n        ]}\n      />\n    </div>\n  );\n}\n","import React from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport LocalStorage from \"../../Utilidades/localStorage\";\nimport { useStateValue } from \"../../statemanagement\";\nimport { useStyles } from \"./styles\";\nimport CustomSnackbar from \"./Snackbar\";\n\nfunction CreateNote() {\n  const classes = useStyles();\n  const [state, setState] = React.useState({\n    id: 0, //almacena la fecha de la nota\n    category: \"\",\n    message: \"\",\n    title: \"\"\n  });\n  const inputLabel = React.useRef(null);\n  const [labelWidth, setLabelWidth] = React.useState(0);\n  const [openSnackbar, setOpenSnackbar] = React.useState(false);\n  const [, dispatch] = useStateValue();\n\n  React.useEffect(() => {\n    setLabelWidth(inputLabel.current.offsetWidth);\n  }, []);\n  function handleChange(name, event) {\n    setState({\n      ...state,\n      [name]: event.target.value,\n      id: new Date().getTime()\n    });\n  }\n\n  /**\n   * Add notes inside of localStorage and context api\n   **/\n  function addToNotes() {\n    //note book is not set, so set the Note in \"Note\" object\n    if (state.notebook === \"\") {\n      const allNodes = LocalStorage.getNotes();\n      let allNodesObject = allNodes !== null ? JSON.parse(allNodes) : [];\n      const rowExists = LocalStorage.rowExists(state);\n      if (rowExists.length === 0) {\n        setOpenSnackbar(false);\n        if (allNodesObject.length === 0) {\n          allNodesObject = [state];\n        } else {\n          allNodesObject.push(state);\n        }\n        LocalStorage.setNotes(JSON.stringify(allNodesObject));\n        dispatch({\n          type: \"newNote\",\n          notes: allNodesObject\n        });\n      } else {\n        setOpenSnackbar(true);\n      }\n    } else {\n      const allNodes = LocalStorage.getNotebooks(state.notebook);\n      let allNodesObject = allNodes !== null ? JSON.parse(allNodes) : [];\n      //set the note inside note book\n      const rowExists = LocalStorage.rowExists(state);\n      if (rowExists.length === 0) {\n        setOpenSnackbar(false);\n        if (allNodesObject.length === 0) {\n          allNodesObject = [state];\n        } else {\n          allNodesObject.push(state);\n        }\n        LocalStorage.set(state.notebook, JSON.stringify(allNodesObject));\n        dispatch({\n          type: \"newNote\",\n          notes: allNodesObject\n        });\n      } else {\n        setOpenSnackbar(true);\n      }\n    }\n  }\n\n  /**\n   * On component Did mount , send data from localStorage into context api\n   **/\n  React.useEffect(() => {\n    let All;\n    let NoteNextMonth = LocalStorage.getNotebooks(\"Next Month\");\n\n    NoteNextMonth = NoteNextMonth !== null ? JSON.parse(NoteNextMonth) : [];\n\n    All = [...NoteNextMonth];\n    if (All.length > 0) {\n      dispatch({ type: \"newNote\", notes: All });\n    }\n  }, [dispatch]);\n\n  return (\n    <React.Fragment>\n      <Typography\n        variant=\"h5\"\n        align=\"center\"\n        color=\"primary\"\n        gutterBottom\n        noWrap\n      >\n        Nueva Nota\n      </Typography>\n\n      <TextField\n        id=\"outlined-textarea\"\n        label=\"Escribe el contenido de la nota\"\n        placeholder=\"Escribe la nota\"\n        multiline\n        className={classes.textField}\n        margin=\"normal\"\n        variant=\"outlined\"\n        onChange={e => handleChange(\"title\", e)}\n        rows={10}\n        fullWidth\n      />\n\n      <FormControl variant=\"outlined\" className={classes.formControl}>\n        <InputLabel ref={inputLabel} htmlFor=\"outlined-category-native-simple\">\n          Etiqueta\n        </InputLabel>\n        <Select\n          native\n          value={state.category}\n          onChange={e => handleChange(\"category\", e)}\n          labelWidth={labelWidth}\n          inputProps={{\n            name: \"category\",\n            id: \"outlined-category-native-simple\"\n          }}\n        >\n          <option value=\"\" />\n          <option value={\"React\"}>React</option>\n          <option value={\"Javascript\"}>Javascript</option>\n          <option value={\"Bootstarp\"}>Bootstarp</option>\n          <option value={\"Electron\"}>Electron</option>\n          <option value={\"HTML\"}>HTML</option>\n          <option value={\"Matematicas\"}>Matematicas</option>\n        </Select>\n      </FormControl>\n      <Button\n        variant=\"outlined\"\n        color=\"primary\"\n        className={classes.button}\n        onClick={addToNotes}\n      >\n        Guardar\n      </Button>\n      <CustomSnackbar\n        open={openSnackbar}\n        setClose={() => setOpenSnackbar(false)}\n      />\n    </React.Fragment>\n  );\n}\n\nexport default CreateNote;\n","import React from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport { useStateValue } from \"../statemanagement\";\nimport Button from \"@material-ui/core/Button\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport LocalStorage from \"../Utilidades/localStorage\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\n\nconst useStyles = makeStyles(theme => ({\n  container: {\n    display: \"flex\",\n    flexWrap: \"wrap\"\n  },\n  button: {\n    margin: theme.spacing(1)\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1)\n  },\n  dense: {\n    marginTop: theme.spacing(2)\n  },\n  menu: {\n    width: 200\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    width: \"100%\"\n  }\n}));\n\nexport default function ModalBase() {\n  const [{ modal, edit }, dispatch] = useStateValue();\n  const inputLabel = React.useRef(null);\n  const [labelWidth] = React.useState(0);\n  const classes = useStyles();\n  const [state, setState] = React.useState({\n    category: \"\",\n    message: \"\",\n    title: \"\"\n  });\n\n  const handleClose = () => {\n    dispatch({ type: \"openModal\", modal: false });\n  };\n\n  function addToNotes() {\n    if (LocalStorage.updateId(edit, state)) {\n      dispatch({\n        type: \"newNote\",\n        notes: []\n      });\n      const findItem = LocalStorage.findId(edit)[0];\n      const allNodes = JSON.parse(\n        LocalStorage.getNotebooks(\n          findItem.notebook === \"\" ? \"notes\" : findItem.notebook\n        )\n      );\n\n      dispatch({\n        type: \"newNote\",\n        notes: allNodes\n      });\n      handleClose();\n    }\n  }\n\n  function handleChange(name, event) {\n    setState({\n      ...state,\n      [name]: event.target.value\n    });\n  }\n\n  React.useEffect(() => {\n    if (edit !== null) {\n      const rowExists = LocalStorage.findId(edit);\n      if (rowExists.length > 0) {\n        setState(rowExists[0]);\n      }\n    }\n  }, [edit]);\n\n  React.useEffect(() => {\n    return () => {\n      setState({ category: \"\", message: \"\", title: \"\" });\n    };\n  }, []);\n\n  return (\n    <React.Fragment>\n      <Dialog\n        open={modal}\n        onClose={handleClose}\n        aria-labelledby=\"form-dialog-title\"\n      >\n        <DialogTitle id=\"form-dialog-title\">Edit Note</DialogTitle>\n        <DialogContent>\n          <TextField\n            value={state !== undefined && state.title}\n            id=\"outlined-textarea\"\n            label=\"Title\"\n            placeholder=\"Write your title\"\n            className={classes.textField}\n            margin=\"normal\"\n            variant=\"outlined\"\n            fullWidth\n            onChange={e => handleChange(\"title\", e)}\n          />\n          <FormControl variant=\"outlined\" className={classes.formControl}>\n            <InputLabel ref={inputLabel} htmlFor=\"outlined-age-native-simple\">\n              Category\n            </InputLabel>\n            <Select\n              native\n              value={state !== undefined && state.category}\n              onChange={e => handleChange(\"category\", e)}\n              labelWidth={labelWidth}\n              inputProps={{\n                name: \"age\",\n                id: \"outlined-age-native-simple\"\n              }}\n            >\n              <option value=\"\" />\n              <option value={\"Family\"}>Family</option>\n              <option value={\"Work\"}>Work</option>\n              <option value={\"Friends\"}>Friends</option>\n            </Select>\n          </FormControl>\n\n          <TextField\n            value={state !== undefined && state.message}\n            id=\"outlined-textarea\"\n            label=\"Write your Message\"\n            placeholder=\"Write your note\"\n            multiline\n            className={classes.textField}\n            margin=\"normal\"\n            variant=\"outlined\"\n            onChange={e => handleChange(\"message\", e)}\n            rows={10}\n            fullWidth\n          />\n          <Button\n            variant=\"outlined\"\n            color=\"secondary\"\n            className={classes.button}\n            onClick={addToNotes}\n          >\n            Edit Note\n          </Button>\n        </DialogContent>\n      </Dialog>\n    </React.Fragment>\n  );\n}\n","import React from \"react\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport { useStateValue } from \"../statemanagement\";\nimport LocalStorage from \"../Utilidades/localStorage\";\nimport ReactMarkdown from \"react-markdown/with-html\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Divider from \"@material-ui/core/Divider\";\n\nexport default function ShowModal() {\n  const [{ showModal, show }, dispatch] = useStateValue();\n  const [state, setState] = React.useState({\n    category: \"\",\n    message: \"\",\n    title: \"\"\n  });\n\n  const handleClose = () => {\n    dispatch({ type: \"showMessage\", showModal: false });\n  };\n\n  React.useEffect(() => {\n    const rowExists = LocalStorage.findId(show);\n    if (rowExists.length > 0) {\n      setState(rowExists[0]);\n    }\n  }, [show]);\n\n  React.useEffect(() => {\n    return () => {\n      setState({ category: \"\", message: \"\", title: \"\" });\n    };\n  }, [show]);\n\n  return (\n    <React.Fragment>\n      {state !== undefined && (\n        <Dialog\n          fullWidth\n          open={showModal}\n          onClose={handleClose}\n          aria-labelledby=\"form-dialog-title\"\n        >\n          <DialogTitle id=\"form-dialog-title\">{state.title}</DialogTitle>\n          <DialogContent>\n            <Typography color={\"secondary\"} variant=\"caption\">\n              category : {state.category}\n            </Typography>\n            <Divider />\n            <ReactMarkdown source={state.message} escapeHtml={false} />\n          </DialogContent>\n        </Dialog>\n      )}\n    </React.Fragment>\n  );\n}\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nexport const useStyles = makeStyles(theme => ({\n  root: {\n    padding: theme.spacing(3, 2),\n    width: \"90%\",\n    margin: \"0 auto\",\n    marginTop: 100\n  }\n}));\n","import React from \"react\";\nimport ListaNotas from \"../ListaNotas\";\nimport CrearNota from \"../CrearNota\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { StateProvider, initialState, reducer } from \"../../statemanagement\";\nimport ModalBase from \"../../Utilidades/Modal\";\nimport ShowModal from \"../../Utilidades/ShowModal\";\nimport { useStyles } from \"./styles\";\n\nfunction MainComponent() {\n  const classes = useStyles();\n  return (\n    <React.Fragment>\n      <Paper className={classes.root}>\n        <Grid container spacing={3}>\n          <StateProvider initialState={initialState} reducer={reducer}>\n            <React.Fragment>\n              <ModalBase />\n              <ShowModal />\n              <Grid item xs={2}>\n              </Grid>\n              <Grid item xs={5}>\n                <ListaNotas />\n              </Grid>\n              <Grid item xs={5}>\n                <CrearNota />\n              </Grid>\n            </React.Fragment>\n          </StateProvider>\n        </Grid>\n      </Paper>\n    </React.Fragment>\n  );\n}\n\nexport default MainComponent;\n","import React from \"react\";\nimport MainComponent from \"./components/ComponentesPrincipales\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <MainComponent />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}